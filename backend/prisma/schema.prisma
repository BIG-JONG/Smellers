generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  Y
  N
}

enum NoteType {
  TOP
  MIDDLE
  BASE
}

model UserInfo {
  userId     Int        @id @default(autoincrement()) @map("user_id")
  email      String     @unique @map("email")
  password   String     @map("password")
  nickname   String     @map("nickname")
  userStatus UserStatus @default(Y) @map("user_status")

  perfumes PerfumeInfo[]
  follow FollowingList[] @relation("follow")
  followed FollowingList[] @relation("followed")

  @@map("user_info")
}

model PerfumeInfo {
  perfumeId     Int      @id @default(autoincrement()) @map("perfume_id")
  userId        Int      @map("user_id")
  perfumeName   String   @map("perfume_name")
  brandName     String   @map("brand_name")
  content       String   @map("content")
  tag           String   @map("tag")
  emotionTag    String   @map("emotion_tag")
  point         Int      @default(0) @map("point")
  price         Int      @map("price")
  isPublic      String   @default("N") @map("is_public")
  perfumeStatus String   @default("Y") @map("perfume_status")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  user   UserInfo      @relation(fields: [userId], references: [userId])
  images PerfumeImg[]
  notes  PerfumeNote[]

  @@map("perfume_info")
}

model PerfumeImg {
  perfumeId Int     @id @map("perfume_id")
  url       String? @map("url")

  perfume PerfumeInfo @relation(fields: [perfumeId], references: [perfumeId])

  @@map("perfume_img")
}

model PerfumeNote {
  pnId      Int      @id @default(autoincrement()) @map("pn_id")
  perfumeId Int      @map("perfume_id")
  noteType  NoteType @map("note_type")
  noteName  String   @map("note_name")

  perfume PerfumeInfo @relation(fields: [perfumeId], references: [perfumeId])

  @@map("perfume_note")
}

model FollowingList {
  followId     Int      @id @default(autoincrement()) @map("follow_id")
  userId       Int      @map("user_id")
  followerId   Int      @map("follower_id")
  followStatus String   @default("Y") @map("follow_status")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  

  follow     UserInfo @relation("follow",fields: [userId], references: [userId])
  followed UserInfo @relation("followed",fields: [followerId], references: [userId])

  @@map("following_list")
}
