// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// server/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL")
}

// ENUM 정의
enum UserStatus {
  Y
  N
}

enum NoteType {
  TOP
  MIDDLE
  BASE
}

// 모델 정의
model PERFUME_INFO {
  PERFUME_ID     Int           @id
  USER_ID        Int
  PERFUME_NAME   String?
  BRAND_NAME     String?
  CONTENT        String?
  TAG            String?
  EMOTION_TAG    String?
  POINT          Int?
  IS_PUBLIC      String?
  PERFUME_STATUS String?
  CREATE_AT      DateTime?
  UPDATE_AT      DateTime?

  // 관계
  user           USER_INFO     @relation(fields: [USER_ID], references: [USER_ID])
  images         PERFUME_IMG[]
  notes          PERFUME_NOTE[]
}

model PERFUME_IMG {
  PERFUME_ID Int    @id
  URL        String?

  // 관계
  perfume    PERFUME_INFO @relation(fields: [PERFUME_ID], references: [PERFUME_ID])
}

model PERFUME_NOTE {
  PN_ID       Int       @id @default(autoincrement())
  PERFUME_ID  Int
  NOTE_TYPE   NoteType?
  NOTE_NAME   String?

  // 관계
  perfume     PERFUME_INFO @relation(fields: [PERFUME_ID], references: [PERFUME_ID])
}

model FOLLOWINGLIST {
  USER_ID     Int    @id @default(autoincrement())
  FLOW_ID     Int?
  FLOW_STATUS String?
  CREATE_AT   DateTime?
  UPDATE_AT   DateTime?

  // 관계
  user        USER_INFO @relation(fields: [USER_ID], references: [USER_ID])
}

model USER_INFO {
  USER_ID     Int             @id @default(autoincrement())
  EMAIL       String?
  PASSWORD    String?
  NICKNAME    String?
  USER_STATUS UserStatus?

  // 관계
  perfumes    PERFUME_INFO[]
  followings  FOLLOWINGLIST[]
}
